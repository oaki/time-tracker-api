{block content}


<h2>Dochádzka</h2>
<div>
    {form selectDateForm}
        {label year}{input year}
        {input submit}

    {/form}
</div>

{foreach $months as $k=>$month}

    <a href="{plink generate year=>$year,month=>$k}" class="btn btn-success float-right"
       data-month="{$k}">Generovať</a>

    <h3 >{$month['name']}

        <span style="font-size: 10px;color: silver;font-weight: normal;">
                        ({count($month['days'])})
                    </span>
    </h3>


    <div class="table-responsive month-table" data-mount="{$k}">
        <table class="table table-striped table-sm summary-table">
            <thead>
            <tr>
                <th>Meno/deň</th>
                {for $i=1;$i<=count($month['days']);$i++}
                    <th n:class="($getWeekDay($year, $k, $i) == 'So' OR $getWeekDay($year, $k, $i) == 'Ne') ? weekend">
                        {$getWeekDay($year, $k, $i)}<br/>
                        {$i}
                    </th>
                {/for}

                <th>Spolu</th>
                <th>Rate</th>
                <th>Cena</th>
                <th>Vyplatené</th>
                <th>Doplatit</th>

            </tr>
            </thead>
            <tbody>
            {if count($summary) > 0 AND isset($summary[$k])}
                {foreach $summary[$k]['json'] as $arr}
                    <tr data-summary-id="{$summary[$k]['id']}" class="summary user" data-user-id="{$arr->userId}">
                        <th>{$arr->userName}</th>

                        {foreach $arr->days as $a}
                            <td n:class="($getWeekDay($year, $k, $a->day) == 'So' OR $getWeekDay($year, $k, $a->day) == 'Ne') ? weekend">
                                <input type="text" value="{$a->sum}" class="number user-{$arr->userId}-day hour hour-{$arr->userId}-{$k}"/>
                            </td>
                        {/foreach}
                        {dump $arr}
                        <td>
                            {$arr->total}
                        </td>
                        <td>
                            <input
                                    class="number user-rate user-rate-{$arr->userId}-{$arr->month}" type="text"
                                    value="{$arr->userRate}"/>
                        </td>
                        <td class="price-bg">
                            <strong class="user-price-{$arr->userId}-{$arr->month}"></strong>
                        </td>
                        <td class="price-bg">
                            <input class="price user-payout user-payout-{$arr->userId}-{$arr->month}" value="{$arr->userPayout}"/>
                        </td>
                        <td class="price-bg">
                            <input class="price user-pay-extra user-pay-extra-{$arr->userId}-{$arr->month}" value="{$arr->userPayExtra}"/>
                        </td>
                    </tr>
                {/foreach}
            {else}
                <tr>
                    <td>No data</td>
                </tr>
            {/if}
            </tbody>
        </table>
    </div>
{/foreach}

<script>
    function isNumeric(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    }

    $(document).ready(function () {
        function calculate() {
            const $months = $('.month-table');
            $months.each((mi, monthEl) => {
                const $monthEl = $(monthEl);
                const $usersRows = $monthEl.find('.user');
                $usersRows.each((ui, userRowEl) => {
                    const $userRow = $(userRowEl);
                    const $userHours = $userRow.find('.hour');
                    const hours = $userHours.toArray().map((hourEl) => {
                        const $input = $(hourEl);
                        const val = $input.val();

                        return parseFloat(val);
                    });
                    const userId = $userRow.attr('data-user-id');
                    const mount = $monthEl.attr('data-mount');
                    const rate = $userRow.find('.user-rate').val();

                    const $userPrice = $('.user-price-' + userId + '-' + mount);
                    const sum = hours.reduce((a, b) => a + b, 0);

                    if ($userPrice.length === 1) {
                        $userPrice.html(sum * rate)
                    }
                });
            });
        }

        calculate();

        $('.hour').on('change', function(){
            const newVal = $(this).val().replace(',', '.');
            console.log('newVal',newVal);
            if(isNumeric(newVal)){
                $(this).val(newVal);
            }
            calculate();
        });

        $('.user-rate').on('change', function () {
            const newVal = $(this).val().replace(',', '.');
            console.log('newVal',newVal);
            if(isNumeric(newVal)){
                $(this).val(newVal);
            }
            calculate();
        });

        $('.hour, .user-rate, .user-payout, .user-pay-extra').on('change', function () {
            const $el = $(this);
            const value = $el.val();
            const summaryId = $el.closest('.summary').attr('data-summary-id');
            const endpoint = {plink save};



            let type = '';
            if($(this).hasClass('hour')){
                type = 'hour';
            }
            if($(this).hasClass('user-rate')){
                type = 'user-rate';
            }
            if($(this).hasClass('user-payout')){
                type = 'user-payout';
            } if($(this).hasClass('user-pay-extra')){
                type = 'user-pay-extra';
            }

            const json = JSON.stringify({
                summaryId: parseInt(summaryId),
                type,
                value:value
            });
            $.ajax({
                type: "POST",
                url: endpoint,
                data: {
                    json
                },
                success: function (data) {
                    console.log(data);
                },
                error: function (textStatus, errorThrown) {
                    alert('no');
                }

            });
        });
    });
</script>